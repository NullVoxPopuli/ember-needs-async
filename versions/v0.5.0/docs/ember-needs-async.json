{"jsonapi":{"version":"1.0"},"data":{"type":"project","id":"ember-needs-async","attributes":{"name":"ember-needs-async","version":"0.5.0","navigationIndex":[{"type":"components","items":[{"id":"ember-needs-async/components/needs-async","path":"components/needs-async","name":"{{needs-async}}"}]},{"type":"helpers","items":[{"id":"ember-needs-async/helpers/async-all","path":"helpers/async-all","name":"{{async-all}}"},{"id":"ember-needs-async/helpers/async-hash","path":"helpers/async-hash","name":"{{async-hash}}"},{"id":"ember-needs-async/helpers/belongs-to","path":"helpers/belongs-to","name":"{{belongs-to}}"},{"id":"ember-needs-async/helpers/find-all","path":"helpers/find-all","name":"{{find-all}}"},{"id":"ember-needs-async/helpers/find-record","path":"helpers/find-record","name":"{{find-record}}"},{"id":"ember-needs-async/helpers/has-many","path":"helpers/has-many","name":"{{has-many}}"},{"id":"ember-needs-async/helpers/peek-all","path":"helpers/peek-all","name":"{{peek-all}}"},{"id":"ember-needs-async/helpers/peek-record","path":"helpers/peek-record","name":"{{peek-record}}"},{"id":"ember-needs-async/helpers/query","path":"helpers/query","name":"{{query}}"},{"id":"ember-needs-async/helpers/timeout","path":"helpers/timeout","name":"{{timeout}}"}]}]},"relationships":{"modules":{"data":[{"type":"module","id":"ember-needs-async/components/needs-async"},{"type":"module","id":"ember-needs-async/helpers/async-all"},{"type":"module","id":"ember-needs-async/helpers/async-hash"},{"type":"module","id":"ember-needs-async/helpers/belongs-to"},{"type":"module","id":"ember-needs-async/helpers/find-all"},{"type":"module","id":"ember-needs-async/helpers/find-record"},{"type":"module","id":"ember-needs-async/helpers/has-many"},{"type":"module","id":"ember-needs-async/helpers/peek-all"},{"type":"module","id":"ember-needs-async/helpers/peek-record"},{"type":"module","id":"ember-needs-async/helpers/query"},{"type":"module","id":"ember-needs-async/helpers/timeout"}]}}},"included":[{"type":"component","id":"ember-needs-async/components/needs-async~NeedsAsync","attributes":{"name":"NeedsAsync","file":"ember-needs-async/components/needs-async","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">NeedsAsync</span> @<span class=\"hljs-attr\">needs</span>=<span class=\"hljs-string\">(find-record</span> '<span class=\"hljs-attr\">user</span>' '<span class=\"hljs-attr\">1</span>') <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">States</span>|&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">States.loading</span>&gt;</span>\n      <span class=\"hljs-comment\">&lt;!-- render a loading state here --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">States.loading</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">States.loaded</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">user</span>|&gt;</span>\n      <span class=\"hljs-comment\">&lt;!-- render whatever needs 'user' here --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">States.loaded</span>&gt;</span>\n    <span class=\"hljs-tag\">&lt;<span class=\"hljs-name\">States.error</span> <span class=\"hljs-attr\">as</span> |<span class=\"hljs-attr\">error</span>|&gt;</span>\n      <span class=\"hljs-comment\">&lt;!-- render an error state here optionally using 'error' --&gt;</span>\n    <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">States.error</span>&gt;</span>\n  <span class=\"hljs-tag\">&lt;/<span class=\"hljs-name\">NeedsAsync</span>&gt;</span></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"isInterface":false,"exportType":"default","decorators":[],"fields":[],"methods":[],"accessors":[],"parentClassId":null,"arguments":[],"yields":[{"name":"States","type":"Hash","description":""},{"name":"States.taskInstance","type":"TaskInstance","description":"an Ember Concurrency TaskInstance"},{"name":"States.loading","type":"Component","description":"a component that renders its block if the task instance is still loading"},{"name":"States.loaded","type":"Component","description":"a component that renders its block and yields the task value once the task is done loading"},{"name":"States.error","type":"Component","description":"a component that renders its block and yields an error if the tak encountered an error"}]},"relationships":{"parentClass":{"data":null}}},{"type":"module","id":"ember-needs-async/components/needs-async","attributes":{"file":"ember-needs-async/components/needs-async","functions":[],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[{"type":"component","id":"ember-needs-async/components/needs-async~NeedsAsync"}]}}},{"type":"module","id":"ember-needs-async/helpers/async-all","attributes":{"file":"ember-needs-async/helpers/async-all","functions":[{"name":"async-all","file":"ember-needs-async/helpers/async-all","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{async-all (array\n    (find-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"1\"</span>)\n    (find-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"2\"</span>)\n  )}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to an array of TaskInstance results","properties":[]},"params":[{"name":"taskInstances","type":"Array","description":"an array of Ember Concurrency task instances"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/async-hash","attributes":{"file":"ember-needs-async/helpers/async-hash","functions":[{"name":"async-hash","file":"ember-needs-async/helpers/async-hash","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{async-<span class=\"hljs-built_in\">hash</span> (<span class=\"hljs-built_in\">hash</span>\n    foo=(find-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"1\"</span>)\n    bar=(find-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"2\"</span>)\n  )}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to a hash of TaskInstance results","properties":[]},"params":[{"name":"taskInstances","type":"Array","description":"an array of Ember Concurrency task instances"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/belongs-to","attributes":{"file":"ember-needs-async/helpers/belongs-to","functions":[{"name":"belongs-to","file":"ember-needs-async/helpers/belongs-to","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{belongs-to user <span class=\"hljs-string\">\"company\"</span>}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to a DS.Model","properties":[]},"params":[{"name":"model","type":"DS.Model","description":"the model to fetch the belongs-to relationship from"},{"name":"relationship","type":"string","description":"the name of the relationship to fetch"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/find-all","attributes":{"file":"ember-needs-async/helpers/find-all","functions":[{"name":"find-all","file":"ember-needs-async/helpers/find-all","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{find-all <span class=\"hljs-string\">\"user\"</span> (<span class=\"hljs-built_in\">hash</span> include=<span class=\"hljs-string\">\"company\"</span>)}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":5,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to a DS.RecordArray","properties":[]},"params":[{"name":"modelType","type":"string","description":"the model type to request"},{"name":"options","type":"object","description":"(optional) options to pass to the store.findAll method"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/find-record","attributes":{"file":"ember-needs-async/helpers/find-record","functions":[{"name":"find-all","file":"ember-needs-async/helpers/find-record","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{find-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"1\"</span> (<span class=\"hljs-built_in\">hash</span> include=<span class=\"hljs-string\">\"company\"</span>)}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":5,"access":"public","tags":[],"returns":{"type":"Promise","description":"a promise that resolves to a DS.Model","properties":[]},"params":[{"name":"modelType","type":"string","description":"the model type to request"},{"name":"id","type":"string","description":"the id of the model to request"},{"name":"options","type":"object","description":"(optional) options to pass to the store.findRecord method"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/has-many","attributes":{"file":"ember-needs-async/helpers/has-many","functions":[{"name":"has-many","file":"ember-needs-async/helpers/has-many","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{has-many company <span class=\"hljs-string\">\"employees\"</span>}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to a DS.RecordArray","properties":[]},"params":[{"name":"model","type":"DS.Model","description":"the model to fetch the has-many relationship from"},{"name":"relationship","type":"string","description":"the name of the relationship to fetch"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/peek-all","attributes":{"file":"ember-needs-async/helpers/peek-all","functions":[{"name":"peek-all","file":"ember-needs-async/helpers/peek-all","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{peek-all <span class=\"hljs-string\">\"user\"</span>}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":5,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves immediately to a DS.RecordArray","properties":[]},"params":[{"name":"modelType","type":"string","description":"the model type to request"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/peek-record","attributes":{"file":"ember-needs-async/helpers/peek-record","functions":[{"name":"peek-record","file":"ember-needs-async/helpers/peek-record","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{peek-record <span class=\"hljs-string\">\"user\"</span> <span class=\"hljs-string\">\"1\"</span>}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":5,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves immediately to a DS.Model","properties":[]},"params":[{"name":"modelType","type":"string","description":"the model type to request"},{"name":"id","type":"string","description":"the id of the model to fetch from the store"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/query","attributes":{"file":"ember-needs-async/helpers/query","functions":[{"name":"query","file":"ember-needs-async/helpers/query","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{query <span class=\"hljs-string\">\"user\"</span> (<span class=\"hljs-built_in\">hash</span> lastName=<span class=\"hljs-string\">\"smith\"</span> page=2)}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":5,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to a DS.RecordArray","properties":[]},"params":[{"name":"modelType","type":"string","description":"the model type to request"},{"name":"query","type":"object","description":"the hash that includes all params for the query"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}},{"type":"module","id":"ember-needs-async/helpers/timeout","attributes":{"file":"ember-needs-async/helpers/timeout","functions":[{"name":"timeout","file":"ember-needs-async/helpers/timeout","description":"<div class=\"docs-md\"><p>Usage:</p>\n<pre class=\"docs-md__code\"><code class=\"undefinedhbs\"><span class=\"xml\">  </span><span class=\"hljs-template-variable\">{{timeout 1000}}</span><span class=\"xml\"></span></code></pre></div>","lineNumber":4,"access":"public","tags":[],"returns":{"type":"TaskInstance","description":"a TaskInstance that resolves to null","properties":[]},"params":[{"name":"milliseconds","type":"string","description":"the number of milliseconds to wait"},{"name":"value","type":"*","description":"(optional, default true) the value to yield once the timeout has expired"}],"isAsync":false,"isGenerator":false,"exportType":"named"}],"variables":[]},"relationships":{"classes":{"data":[]},"components":{"data":[]}}}]}
